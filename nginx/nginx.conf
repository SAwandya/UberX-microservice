# nginx/nginx.conf
server {
    listen 80;
    server_name localhost;

    # Authentication service endpoints with FQDN
    location /api/auth/ {
        proxy_pass http://auth-service.uberx-auth.svc.cluster.local:3000/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
    }

    # Internal authentication validation endpoint with FQDN
    location = /auth/validate {
        internal;
        proxy_pass http://auth-service.uberx-auth.svc.cluster.local:3000/api/auth/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
        proxy_method POST;
    }

    # Protected Order Service endpoints with FQDN
    location /api/orders/ {
        auth_request /auth/validate;
        auth_request_set $auth_status $upstream_status;

        # Forward the original authorization header to the upstream service
        proxy_set_header Authorization $http_authorization;
        proxy_pass http://order-service.uberx-order.svc.cluster.local:4001/api/orders/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;

        # Better error handling
        error_page 401 = @error401;
        error_page 500 502 503 504 = @error50x;
    }

    # Protected Order Service endpoints with FQDN
    location /api/payments/ {
        auth_request /auth/validate;
        auth_request_set $auth_status $upstream_status;

        # Forward the original authorization header to the upstream service
        proxy_set_header Authorization $http_authorization;
        proxy_pass http://payment-service.uberx-payment.svc.cluster.local:4006/api/payments/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;

        # Better error handling
        error_page 401 = @error401;
        error_page 500 502 503 504 = @error50x;
    }

    # Error handling for 401 Unauthorized
    location @error401 {
        return 401 '{"error": "Unauthorized", "message": "Authentication required or token expired"}';
        add_header Content-Type application/json;
    }

    # Error handling for server errors
    location @error50x {
        return 500 '{"error": "Server Error", "message": "An internal server error occurred"}';
        add_header Content-Type application/json;
    }

    # Health check endpoint
    location /health {
        return 200 '{"status": "ok"}';
        add_header Content-Type application/json;
    }

    # Add direct access to order service for testing with FQDN
    location /api/orders-direct/ {
        proxy_pass http://order-service.uberx-order.svc.cluster.local:4001/api/orders/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Test endpoint to verify nginx is working
    location /test {
        default_type application/json;
        return 200 '{"status": "ok", "message": "Nginx is working"}';
        add_header Content-Type application/json;
    }
}