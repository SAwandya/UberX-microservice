# k8s/uberx-auth/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: uberx-auth # <--- Correct namespace
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: thusalapi/auth-service
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DB_HOST
          # Connect to DB service in the same namespace
          value: "mysql-auth" # <--- UPDATED HOST
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              # Secret is in the same namespace
              name: mysql-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              # Secret is in the same namespace
              name: mysql-credentials
              key: password
        - name: DB_NAME
          value: "auth_db"
        - name: ACCESS_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              # Secret is in the same namespace
              name: jwt-secrets
              key: access-token-secret
        - name: ACCESS_TOKEN_EXPIRY
          value: "15m"
        - name: REFRESH_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              # Secret is in the same namespace
              name: jwt-secrets
              key: refresh-token-secret
        - name: REFRESH_TOKEN_EXPIRY
          value: "7d"
        # ... resources, probes ...
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5