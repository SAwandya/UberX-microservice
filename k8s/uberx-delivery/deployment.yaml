# k8s/uberx-order/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-service
  namespace: uberx-delivery # <--- Correct namespace
  labels:
    app: delivery-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delivery-service
  template:
    metadata:
      labels:
        app: delivery-service
    spec:
      containers:
        - name: delivery-service
          image: thusalapi/delivery-service:latest
          ports:
            - containerPort: 4001
          env:
            - name: NATS_URL
              value: "nats://nats.uberx-nats.svc.cluster.local:4222"
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "5000"
            - name: DB_HOST
              # Connect to DB service in the same namespace
              value: "mysql-delivery" # <--- UPDATED HOST
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  # Secret is in the same namespace
                  name: mysql-delivery-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  # Secret is in the same namespace
                  name: mysql-delivery-credentials
                  key: password
            - name: DB_NAME
              value: "delivery_service"
            - name: REDIS_HOST
              value: "redis-service" # Ensure this is set
            - name: REDIS_PORT
              value: "6379" # Ensure this is set
            - name: ACCESS_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secrets
                  key: access-token-secret
          # ... resources, probes ...
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.2"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
